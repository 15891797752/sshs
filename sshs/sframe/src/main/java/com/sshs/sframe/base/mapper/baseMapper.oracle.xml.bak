<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.afcac.aframe.base.dao.IBaseDao">

	<!--表名 -->
	<sql id="tableName">
		${table}
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		CODER_ID ,
		TITLE ,
		MODEL_NAME ,
		MODEL_NAME_CN ,
		FUNCTION_NAME,
		PACKAGE_NAME ,
		CLASS_NAME ,
		TABLE_NAME ,
		TABLE_COMMENT,
		FIELDS ,
		CODER_TYPE ,
		CRT_USER_CODE ,
		CRT_ORG_CODE ,
		CRT_DATE ,
		UPD_USER_CODE ,
		UPD_ORG_CODE ,
		UPD_DATE
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{coderId},
		#{title},
		#{modelName},
		#{modelNameCn},
		#{functionName},
		#{packageName},
		#{className},
		#{tableName},
		#{tableComment},
		#{columns,jdbcType=BLOB},
		#{coderType},
		#{crtUserCode},
		#{crtOrgCode},
		#{crtDate},
		#{updUserCode},
		#{updOrgCode},
		#{updDate}
	</sql>

	<!-- 新增 -->
	<insert id="save" parameterType="Coder">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	<!-- 删除 -->
	<delete id="delete" parameterType="Page">
		delete from
		<include refid="tableName"></include>
		where
		CREATECODE_ID = #{CREATECODE_ID}
	</delete>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="Page" resultType="Page">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		CREATECODE_ID = #{CREATECODE_ID}
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="Page" resultType="Page">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 检索 -->
			and (
			TITLE LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			OBJECTNAME
			LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
			or
			TABLENAME LIKE
			CONCAT(CONCAT('%', #{pd.keywords}),'%')
			)
		</if>
		order by CREATETIME desc
	</select>

	<!-- 列表(主表) -->
	<select id="listFa" resultType="Page">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		FHTYPE = 'fathertable'
	</select>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		CREATECODE_ID in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 代码生成-查询表信息 -->
	<select id="findDbTableForPageList" parameterType="Page"
		resultType="DbTable">
		SELECT A.TABLE_NAME,
		B.COMMENTS AS TABLE_COMMENT,
		CASE WHEN C.TABLE_NAME
		IS NOT NULL THEN '1' ELSE '0' END AS CODER_FLAG
		FROM USER_TABLES A,
		USER_TAB_COMMENTS B,
		(SELECT DISTINCT TABLE_NAME , '1' AS CODER_FLAG
		FROM SYS_CODER) C
		WHERE A.TABLE_NAME = B.TABLE_NAME(+) AND A.TABLE_NAME
		=
		C.TABLE_NAME(+)
		<if test="variables.tableName != null and variables.tableName != ''">
			AND A.TABLE_NAME LIKE LIKED(#{variables.tableName})
		</if>
		<if test="variables.tableComment != null and variables.tableComment != ''">
			AND B.COMMENTS LIKE
			LIKED(#{variables.tableComment})
		</if>
		<if test="variables.coderFlag != null and variables.coderFlag != ''">
			AND C.CODER_FLAG =#{variables.coderFlag}
		</if>
		<if test="orderBy != null and orderBy != ''">
			ORDER BY ${orderBy}
		</if>
	</select>
	<!-- 代码生成-查询列信息 -->
	<select id="findColumnForPageList" parameterType="Page"
		resultType="Column">
		SELECT A.COLUMN_ID,
		A.TABLE_NAME,
		B.COMMENTS AS TABLE_COMMENT,
		A.COLUMN_NAME,
		C.COMMENTS AS COLUMN_COMMENT,
		A.DATA_TYPE AS COLUMN_TYPE,
		A.DATA_LENGTH AS COLUMN_SIZE,
		A.DATA_SCALE AS COLUMN_SCALE,
		A.DATA_DEFAULT AS DEFAULT_VALUE,
		CASE WHEN A.NULLABLE = 'N' THEN 'Y'
		ELSE 'N' END AS REQUIRED_FLAG,
		CASE WHEN D.COLUMN_NAME IS NOT NULL THEN
		'Y' ELSE 'N' END
		AS PRIMARY_KEY_FLAG
		FROM USER_TAB_COLUMNS A,
		USER_TAB_COMMENTS B,
		USER_COL_COMMENTS C,
		(SELECT COL.COLUMN_NAME,
		COL.TABLE_NAME
		FROM USER_CONSTRAINTS CON, USER_CONS_COLUMNS COL
		WHERE
		CON.CONSTRAINT_NAME = COL.CONSTRAINT_NAME
		AND CON.CONSTRAINT_TYPE =
		'P') D
		WHERE A.TABLE_NAME = B.TABLE_NAME(+)
		AND A.TABLE_NAME =
		C.TABLE_NAME(+)
		AND A.COLUMN_NAME = C.COLUMN_NAME(+)
		AND A.TABLE_NAME =
		D.TABLE_NAME(+)
		AND A.COLUMN_NAME = D.COLUMN_NAME(+)
		<if test="variables.tableName != null and variables.tableName != ''">
			AND A.TABLE_NAME =#{variables.tableName}
		</if>
		<if test="orderBy != null and orderBy != ''">
			ORDER BY ${orderBy}
		</if>
		<if test="orderBy == null or orderBy == ''">
			ORDER BY COLUMN_ID
		</if>
	</select>

</mapper>